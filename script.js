const shooter = document.getElementById("shooter");    // Shooter element...
const canvas = document.getElementById("body");        // Canvas Area...

//! Deplying the 50 Enemy Ships...
for(let i = 0; i < 50; i++) {
    const Box = document.createElement('span');     // Creating span tag...
    let topIndex = Math.floor(Math.random() * 13) * 60;     // Random position alloted...
    Box.classList.add("Text");
    Box.innerHTML = i+1;      // Adding the Ship Number...
    let color = Math.floor(Math.random() * 5);     // Random Color Generator...
    if(color == 0)
    {
        Box.style.backgroundColor = 'rgb(100, 100, 255)';
    }
    else if(color == 1)
    {
        Box.style.backgroundColor = 'rgb(200, 200, 50)';
    }
    else if(color == 2)
    {
        Box.style.backgroundColor = 'rgb(25, 225, 25)';
    }
    else if(color == 3)
    {
        Box.style.backgroundColor = 'rgb(225, 50, 225)';
    }
    else if(color == 4)
    {
        Box.style.backgroundColor = 'rgb(22, 220, 220)';
    }
    else
    {
        Box.style.backgroundColor = 'rgb(255, 255, 255)';
    }
    Box.style.top = topIndex + 'px';      // Setting the top coordinate...
    Box.style.left = 1650 + 'px';         // Setting the left coordinate...
    Box.classList.add('Enemy');
    canvas.appendChild(Box);              // Appending the Drones to the Canvas...
}

const Blocks = Array.from(document.querySelectorAll('#body span'));      // Creating the Array of the Enemy Ships...

//! Moving the Enemy Ships with random velocity...
function EnemyDrones(index) {
    let move = Math.floor(Math.random() * 3) + 1;    // random velocity factor...
    let movement = 1450;
    let distance = setInterval(() => {
        movement -= move;  // Moving the Ships towards the Shooter linearly...
        Blocks[index].style.left = movement + 'px';     // Moving ships left...
    }, 5);
    if(movement < 0) {     // If No Ships left to advance, destroy the Interval...
        clearInterval(distance);
    }
}

let ind = 0;          // Index variable for the Ship...
let sendShips = setInterval(() => {
    EnemyDrones(ind);      // Moving the Ships one at a time...
    ind++;
    if(ind > 49) {     // When no ships left to advance, destroy the Interval...
        clearInterval(sendShips);
    }
}, 3000);

let pos = 0;     // Position of the Shooter...
let hits = 0;    // Damage done by the Shooter...

//! Keyboard Controls Defined...
function ShooterMovement(e) {
    // Function of the Arrow Key Down...
    if(e.code == 'ArrowDown') {
        shooter.style.position = 'absolute';
        if(pos < parseInt(window.innerHeight) - 120)
            pos += 60;    // Moving the Shooter Down...
        shooter.style.top = pos + 'px';
    }
    // Function of Arrow Key Up...
    else if(e.code == 'ArrowUp') {
        shooter.style.position = 'absolute';
        if(pos > 0)
            pos -= 60;     // Moving the Shooter Up...
        shooter.style.top = pos + 'px';
    }
    // Function of Key R
    else if(e.code == 'KeyR') {
        location.reload();    // Reloading the window...
    }
    // Function of Space bar Key...
    else if(e.code == 'Space') {
        // Creating the bullet...
        const bullet = document.createElement('div');
        let left = 0;
        bullet.style.position = 'absolute';
        bullet.style.top = pos + 25 + 'px';  // Setting the firing position for the bullet...
        let interval = setInterval(() => {
            left += 5;    // Moving the bullet right...
            bullet.style.left = left + 'px';    // Updating the position at every frame...
            for(let j = 0; j < Blocks.length; j++) {
                // Checking for the Collisions...
                if((bullet.style.top <= parseInt(Blocks[j].style.top) + 60 + 'px') && (bullet.style.top >=
                    Blocks[j].style.top) && (left <= parseInt(Blocks[j].style.left)) && (left >=
                    parseInt(Blocks[j].style.left)))
                    {
                        // If Collision is found...
                        canvas.removeChild(Blocks[j]);    // Remove the enemy ship...
                        hits++;     // Update the damage variable...
                        clearInterval(interval);    // Stop moving the bullet...
                    }
                }
        }, 1);
        bullet.classList.add('bullet-fire');    // Adding the CSS Properties to the bullet...
        canvas.appendChild(bullet);
        setTimeout(() => {
            canvas.removeChild(bullet);    // Remove the bullet when it moves out of the visible screen...
            clearInterval(interval);
        }, 3000);
    }
}

// Constant for manipulating the scores...
const enemyComing = document.getElementById('enemies-coming');
const killed = document.getElementById('killed');

// Updating the Scoreboard at every second...
let finish = setInterval(() => {
    if(ind <= 50)    // Updating the score until all Ships are not sent...
        enemyComing.innerHTML = "Enemies Coming : "+(50-ind)+" / "+50;
    killed.innerHTML = "Damage Given : "+hits;
}, 1000);

//! Function to End the Game...
setTimeout(() => {
    shooter.classList.add("move-away");
    setTimeout(() => {
        const score = document.createElement("div");
        score.classList.add("final");
        score.style.transitionDuration = '1s';
        score.innerHTML = 'Your Score '+hits;      // Rendering the Inner Text of the HTML Element...
        canvas.appendChild(score);
    }, 3000);
}, 155000);     // Ending the game when every ship has been sent out...

// Add Event Listener when the Keyboard Keys are pressed...
window.addEventListener("keydown", (e) => {
    ShooterMovement(e);     // Function call with Input Key as the parameter...
});